---GIT

 4. Создать внешний репозиторий c названием JSON.
https://github.com/VitoOsyko/JSON

 5. Клонировать репозиторий JSON на локальный компьютер.
$ git clone https://github.com/VitoOsyko/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
$ cd json
$ touch new.json

 7. Добавить файл под гит .
$ git add new.json

 8. Закоммитить файл.
$ git commit -m "add the new file"

 9. Отправить файл на внешний GitHub репозиторий.
$ git pull 
$ git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе 
(ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

$ new.json

{"NaneSurname": "Vitaly Osyko",
"Age": 26,
"HomeAnimal": 2 ,
"Car": "Peshkom"
"future salary": "7000$"
}
 
11. Отправить изменения на внешний репозиторий.
$ git commit -am "add personal info to the new.json"
$ git pull
$ git push

 12. Создать файл preferences.json
$ touch preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях 
(Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
$ nano new.json

{
"favorine movie": "12 Years a Slave",
"favorite TV show": "La Casa De Papel",
"favorite meal": "Kharcho",
"favorite time of year": "Summer",
"dream coutry": "Cuba"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
$ cat > skill.json

{
"skills": [
"Git","JSON",
"Postman",
"Jira",
"ADB"]
}

 15. Отправить сразу 2 файла на внешний репозиторий.
$ git add skill.json preferences.json (ИЛИ git add .)
$ git commit -m "add 2 files skill.json and preferences.json"
$ git pull
$ git push

 16. На веб интерфейсе создать файл bug_report.json. 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Add file > Create new file > Commite new file

 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.  19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

{
"Bug_id": 1,
"Title": "The 'SAVE DATA' button is smaller than the others",
"Severity": "trivial",
"Priority": "low",
"Environment": [ "Xiaomi Redmi S2", "Samsung Galaxy A8" "Xiaomi Redmi 5 Plus"],
"AR": "The application buttons have one view",
"ER": "The 'SAVE DATA' button is smaller than the others"
}

 20. Синхронизировать внешний и локальный репозиторий JSON
$ git fetch
$ git pull



---XML
 21. Создать внешний репозиторий c названием XML.
https://github.com/VitoOsyko/XML

 22. Клонировать репозиторий XML на локальный компьютер.
$ git clone https://github.com/VitoOsyko/XML.git

 23. Внутри локального XML создать файл “new.xml”.
$ cd XML
$ touch new.xml

 24. Добавить файл под гит.
$ git add new.xml

 25. Закоммитить файл.
$ git commit -m "add the new.xml"

 26. Отправить файл на внешний GitHub репозиторий.
$ git pull
$ git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количеств<о домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
$ nano new.xml
<?xml version="1.0" encoding="UTF-8"?>

<INFO>
	 <NAME>Osyko Vitaly</NAME>
	 <AGE>26</AGE>
	 <NUMBERofPETS>2</NUMBERofPETS>
	 <SALARY>7000$</SALARY>

 
28. Отправить изменения на внешний репозиторий.
$ git commit -am "add personal info to the new.xml"
$ git pull
$ git push

 29. Создать файл preferences.xml
$ touch preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
$ nano preferences.xml
<?xml version="1.0" encoding="UTF-8"?>

<PREFERENCES>
	 <MOVIE>12 Years a Slave</MOVIE>
	 <TVSHOW>La Casa De Papel</TVSHOW>
	 <MEAL>Kharcho</MEAL>
	 <TIMEofYEAR>Summer</TIMEofYEAR>
	 <CITY>Cuba</CITY>

31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
$ nano skills.xml
<?xml version="1.0" encoding="UTF-8"?>

<SKILLS>
        <GitBash>Commands</GitBash>
        <HTML>The Basic of HTML</HTML>
        <JIRA>The structure of a bug report</JIRA>
        <TestTrail>Test Cases</TestTrail>
        <TestCase> Exact teps to reproduce</TestCase>
        <Checklist>Steps to reproduce</Checklist>
        <JavaScript>Hello,World!</JavaScript>
</SKILLS>

 32. Сделать коммит в одну строку.
(перед этим надо сделать первичный git add . для двух новых файлов)
$ git commit -am 'add new info for skills.xml and preferences.xml'

 33. Отправить сразу 2 файла на внешний репозиторий.
$ git pull
$ git push

 34. На веб интерфейсе создать файл bug_report.xml. 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Add file > Create new file > Commite new file
 
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Edit this file > Commite changes

<?xml version="1.0" encoding="UTF-8"?>
<bug_report>
  <Summary>Menu:error, at the entrance</Summary>
  <Type>Bug</Type>
  <Priority>Medium</Priority>
  <Severity>Major</Severity>
  <AffectsVersion>1.0</AffectsVersion>
  <Enviroment>Windows 10 Pro, Google Chrome 98</Enviroment>
    <Description>
    <FirstStep>Open web-site</FirstStep>
    <SecondStep>pass authorization</SecondStep>
    <ThirdStep>Press the button Menu</ThirdStep>
    <FourthStep>Pay attention to the screen</FourthStep>
    <ExpectedResult>Press the button Menu and see categories of products</ExpectedResult>
    <ActualResult> Press the button Menu and see eror </ActualResult>
    </Description>
  <Status>Open</Status>
  <TypeofBug>Functional</TypeofBug>
</bug_report>
 
 38. Синхронизировать внешний и локальный репозиторий XML
$ git pull



---TXT
 1. Создать внешний репозиторий c названием TXT.
https://github.com/VitoOsyko//TXT

 2. Клонировать репозиторий TXT на локальный компьютер.
$ git clone https://github.com/VitoOsyko//TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
$ cd TXT
$ touch new.txt

 4. Добавить файл под гит.
$ git add new.txt

 5. Закоммитить файл.
$ git commit -m "add new.txt"

 6. Отправить файл на внешний GitHub репозиторий.
$ git pull
$ git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
$ cat >> new.txt

Name: Vitaly
Age: 26
Number of pets: 2

 8. Отправить изменения на внешний репозиторий.
$ git commit -am "add into to the new.txt"
$ git pull
$ git push

 9. Создать файл preferences.txt
$ touch preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
$ cat >> preferences.txt

Film: 12 Years a Slave
TV Show: La Casa De Papel
Dish: Kharcho
Time of the year: Summer

11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
$ cat > skills.txt

1. Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC.
2. Что такое клиент-серверная архитектура.
3. HTTP Методы запросов на сервер.
4. Коды ответов HTTP сервера.
5. Структуры HTTP запросов и ответов.
6. Что такое JSON, XML. Их структура

 12. Сделать коммит в одну строку.
(перед этим надо сделать первичный git add . для двух новых файлов)
$ git commit -am "add new files with info"

 13. Отправить сразу 2 файла на внешний репозиторий.
$ git push

 14. На веб интерфейсе создать файл bug_report.txt. 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Add file > Create new file > Commite new file

 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.  

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
Edit this file > Commite changes

Bug report 
Summary : Menu: eroor, when the entrance.
Type: Bug
Affects version: 1.0
Priority:Medium
Severity: Major
AffectsVersion: 1.0,
Enviroment: Windows 10 Pro, Google Chrome 98
Description:
    FirstStep: Open web-site
    SecondStep: pass authorization
    ThirdStep: Press the button Menu,
    FourthStep: Pay attention to the screen
    ExpectedResult: Press the button Menu and see categories of products
    ActualResult: Press the button Menu and see eror
    Status: Open
    TypeofBug: Functional

 18. Синхронизировать внешний и локальный репозиторий TXT
$ git pull